{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Work/trxrg.com/trxrg/components/header/header-item.tsx\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { fontSize, marginLeft, marginRight } from 'styled-system';\nimport Link from 'next/link';\nimport { OutboundLink } from 'react-ga';\nimport { HeaderItem as Font } from '../typography/header-item';\nconst ICON_SIZE = 24;\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  user-select: none;\n  cursor: pointer;\n`;\nconst ActiveLine = styled.div`\n  width: 100%;\n  height: 2px;\n  background-color: #6202ee;\n  position: relative;\n  top: 25px;\n`;\nconst HeaderLink = styled(Link)`\n  text-decoration: none;\n  margin-top: ${props => props.active ? 2 : 0}px;\n  height: ${ICON_SIZE}px;\n  box-sizing: content-box;\n`;\nconst Icon = styled.i`\n  ${fontSize}\n  ${marginLeft}\n  ${marginRight}\n  color: #fff;\n`;\nexport const HeaderItem = ({\n  icon,\n  label,\n  active,\n  outbound,\n  to,\n  ml,\n  mr\n}) => React.createElement(Wrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, outbound ? React.createElement(OutboundLink, {\n  to: to,\n  target: \"_blank\",\n  eventLabel: to,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(Icon, {\n  ml: ml,\n  mr: mr,\n  fontSize: [18, 24],\n  className: icon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n})) : React.createElement(HeaderLink, {\n  href: to,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, icon ? React.createElement(Icon, {\n  ml: ml,\n  mr: mr,\n  fontSize: [18, 24],\n  className: icon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}) : React.createElement(Font, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, label)), active ? React.createElement(ActiveLine, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}) : null);","map":{"version":3,"sources":["/Users/jason/Work/trxrg.com/trxrg/components/header/header-item.tsx"],"names":["React","styled","fontSize","marginLeft","marginRight","Link","OutboundLink","HeaderItem","Font","ICON_SIZE","Wrapper","div","ActiveLine","HeaderLink","props","active","Icon","i","icon","label","outbound","to","ml","mr"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,EAAkCC,UAAlC,EAA+DC,WAA/D,QAAoG,eAApG;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,UAAU,IAAIC,IAAvB,QAAmC,2BAAnC;AAEA,MAAMC,SAAS,GAAG,EAAlB;AAEA,MAAMC,OAAO,GAAGT,MAAM,CAACU,GAAI;;;;;;;CAA3B;AASA,MAAMC,UAAU,GAAGX,MAAM,CAACU,GAAI;;;;;;CAA9B;AAQA,MAAME,UAAU,GAAGZ,MAAM,CAACI,IAAD,CAA6B;;gBAEtCS,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,CAAG;YACpCN,SAAU;;CAHtB;AAOA,MAAMO,IAAI,GAAGf,MAAM,CAACgB,CAAsD;IACtEf,QAAS;IACTC,UAAW;IACXC,WAAY;;CAHhB;AAkBA,OAAO,MAAMG,UAAU,GAAG,CAAC;AAAEW,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeJ,EAAAA,MAAf;AAAuBK,EAAAA,QAAvB;AAAiCC,EAAAA,EAAjC;AAAqCC,EAAAA,EAArC;AAAyCC,EAAAA;AAAzC,CAAD,KACxB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,QAAQ,GACP,oBAAC,YAAD;AAAc,EAAA,EAAE,EAAEC,EAAlB;AAAsB,EAAA,MAAM,EAAC,QAA7B;AAAsC,EAAA,UAAU,EAAEA,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAEC,EAAV;AAAc,EAAA,EAAE,EAAEC,EAAlB;AAAsB,EAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAAhC;AAA0C,EAAA,SAAS,EAAEL,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADO,GAKP,oBAAC,UAAD;AAAY,EAAA,IAAI,EAAEG,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,IAAI,GACH,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAEI,EAAV;AAAc,EAAA,EAAE,EAAEC,EAAlB;AAAsB,EAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAAhC;AAA0C,EAAA,SAAS,EAAEL,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADG,GAGH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOC,KAAP,CAJJ,CANJ,EAcGJ,MAAM,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,GAAoB,IAd7B,CADK","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport { fontSize, FontSizeProps, marginLeft, MarginLeftProps, marginRight, MarginRightProps } from 'styled-system'\nimport Link from 'next/link'\nimport { OutboundLink } from 'react-ga'\nimport { HeaderItem as Font } from '../typography/header-item'\n\nconst ICON_SIZE = 24\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  user-select: none;\n  cursor: pointer;\n`\n\nconst ActiveLine = styled.div`\n  width: 100%;\n  height: 2px;\n  background-color: #6202ee;\n  position: relative;\n  top: 25px;\n`\n\nconst HeaderLink = styled(Link)<{ active?: boolean }>`\n  text-decoration: none;\n  margin-top: ${props => (props.active ? 2 : 0)}px;\n  height: ${ICON_SIZE}px;\n  box-sizing: content-box;\n`\n\nconst Icon = styled.i<FontSizeProps & MarginLeftProps & MarginRightProps>`\n  ${fontSize}\n  ${marginLeft}\n  ${marginRight}\n  color: #fff;\n`\n\nexport interface HeaderItemProps {\n  icon?: string\n  label: string\n  active?: boolean\n  to: string\n  outbound?: boolean\n  style?: any\n}\n\ntype Props = HeaderItemProps & MarginLeftProps & MarginRightProps\n\nexport const HeaderItem = ({ icon, label, active, outbound, to, ml, mr}: Props) => (\n  <Wrapper>\n    {outbound ? (\n      <OutboundLink to={to} target=\"_blank\" eventLabel={to}>\n        <Icon ml={ml} mr={mr} fontSize={[18, 24]} className={icon} />\n      </OutboundLink>\n    ) : (\n      <HeaderLink href={to}>\n        {icon ? (\n          <Icon ml={ml} mr={mr} fontSize={[18, 24]} className={icon} />\n        ) : (\n          <Font>{label}</Font>\n        )}\n      </HeaderLink>\n    )}\n    {active ? <ActiveLine /> : null}\n  </Wrapper>\n)\n"]},"metadata":{},"sourceType":"module"}